@model SpointLiteVersion.Models.Login

@{
    ViewBag.Title = "Create";
    Layout = null;
}


<div class="container">

    <div class="row">
        <div class="col-md-5 ">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

            <div class="form-horizontal" style="margin-left:30px !important; padding-right:0px !important;">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @if (ViewBag.foto != null)
                {
                    <center>
                        <div>
                            <input type="file" accept="image/*" id="fotosubir" />
                            <label for="fotosubir">
                                <img src="@ViewBag.foto" alt="Alternate Text" id="fotoejemplo" style="width:80px; height:80px; margin-top:15px;" />
                            </label>
                        </div>
                        <span>Seleccionar</span>
                        <input type="hidden" name="Foto" id="Foto" value="@ViewBag.foto" />

                    </center>
                }
                else
                {
                    <center>
                        <div>
                            <input type="file" accept="image/*" id="fotosubir" />
                            <label for="fotosubir">
                                <img src="~/Content/user.png" alt="Alternate Text" id="fotoejemplo" style="width:80px; height:80px; margin-top:15px;" />
                            </label>
                        </div>
                        <span>Seleccionar</span>
                        <input type="hidden" name="Foto" id="Foto" value="" />

                    </center>
                }
                @if (@ViewBag.id != null)
                {
                    @Html.HiddenFor(model => model.LoginId)
                }
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                @*<div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>*@

            
                <div class="form-row">
                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control",@required=true } })
                        @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-5">
                        @Html.LabelFor(model => model.Apellido, htmlAttributes: new { @class = "control-label col-md-2" })

                        @Html.EditorFor(model => model.Apellido, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Apellido, "", new { @class = "text-danger" })
                    </div>
                </div>

                @*<div class="form-group">
            @Html.LabelFor(model => model.Apellido, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Apellido, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Apellido, "", new { @class = "text-danger" })
            </div>
        </div>*@
                <div class="form-row">
                    <div class="form-group col-md-6">
                        @Html.Label("Usuario",new { @class="control-label col-md-2"})
                        @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-5">
                        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })

                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group col-md-6">
                        @Html.Label("Empresa", new { @class = "control-label col-md-2" })
                        @Html.DropDownList("empresaid", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.empresaid, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-5">
                        @Html.LabelFor(model => model.Privilegio, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.Privilegio, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Privilegio, "", new { @class = "text-danger" })
                    </div>

                </div>

                <div class="form-group">
                    <div class="form-group col-md-9">

                        @if (ViewBag.id != null)
                        {

                            <a class="btn btn-danger btnelimina modaleliminar" id="elimin" href="#" data-toggle="modal" data-target="#exampleModal1"><i class="fas fa-trash"></i></a>
                        }

                    </div>
                    <div class="form-group col-md-1">
                        <button type="submit" class="btn btn-info" style="margin-left: 27px;" id="crear" title="Salvar"><i class="far fa-save"></i> </button>


                    </div>
                </div>
                </div>
                }

              

            </div>
            </div>
</div>

<script>
    function leerArchivo() {
        if (this.files && this.files[0]) {
            var FR = new FileReader();
            FR.onload = function (e) {
                document.getElementById("fotoejemplo").src = e.target.result;
                document.getElementById("Foto").value = e.target.result;
                console.log(e.target.result);
            };
            FR.readAsDataURL(this.files[0]);
        }
    }
    document.getElementById("fotosubir").addEventListener("change", leerArchivo, false);
</script>
<script>
    $(document).ready(function () {
        $('.modaleliminar').click(function () {
            var href = $(this).attr("href");
            var url = "@Url.Action("Delete", "Logins", new { id="param-name"})";
            var paciente = $("#LoginId").val();
            url = url.replace("param-name", paciente);
            $(".comprobante1").load(url)
        });
    });
    
</script>